

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

ext.isSnapshot = version.toString().endsWith("SNAPSHOT")

task sourceJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourceJar, javadocJar
}

task printProperties {
	doLast {
		println tag
	}
}

if (isSnapshot) {
	publishing {
		publications {
			main(MavenPublication) {
				from components.java
				artifact sourceJar
			}
		}
		repositories {
			maven {
				credentials {
					username smartThingsUserName
					password smartThingsPassword
				}
				url "https://smartthings.artifactoryonline.com/smartthings/libs-snapshot-local"
			}
		}
	}

} else {
	publishing {
		publications {
			mavenJava(MavenPublication) {
				from components.java
				artifact sourceJar
				groupId project.group
				artifactId project.name
				version project.version
				pom.withXml {
					def root = asNode()
					// Work around gradle bug that publishes compile dependencies as runtime
					// http://discuss.gradle.org/t/maven-publish-plugin-generated-pom-making-dependency-scope-runtime/7494/10
					root.dependencies.'*'.findAll() {
						it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
							dep.name == it.artifactId.text()
						}
					}.each() {
						it.scope*.value = 'compile'
					}
				}
			}
		}
	}
}


bintrayUpload { task ->
	doFirst {
		if (isSnapshot) {
			throw new GradleException('Cannot publish SNAPSHOT versions to BinTray!')
		}
	}
	gradle.taskGraph.whenReady { taskGraph ->
		if (taskGraph.hasTask(task)) {
			task.user = System.getenv('BINTRAY_USER') ?: ''
			task.apiKey = System.getenv('BINTRAY_API_KEY') ?: ''
		}
	}
}

bintray {
	publications = ['mavenJava']
	dryRun = false
	publish = true
	pkg {
		repo = 'maven'
		name = 'smartthings.springboot-dropwizard-metrics'
		userOrg = 'smartthingsoss'
		licenses = ['Apache-2.0']
		desc = 'Spring Boot Auto Configuratoin for Dropwizard Metrics'
		labels = []
		websiteUrl = 'https://github.com/SmartThingsOSS/springboot-dropwizard-metrics'
		issueTrackerUrl = 'https://github.com/SmartThingsOSS/springboot-dropwizard-metrics'
		vcsUrl = 'https://github.com/SmartThingsOSS/springboot-dropwizard-metrics.git'
		version {
			name = project.version
			vcsTag = tag
		}
	}
}

